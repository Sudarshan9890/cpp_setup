// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: nps_cal.proto
// Protobuf C++ Version: 6.32.0-dev

#include "nps_cal.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace nps {

inline constexpr PensionInput::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        fml_gms_amnt_allctd_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PensionInput::PensionInput(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PensionInput_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PensionInputDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PensionInputDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PensionInputDefaultTypeInternal() {}
  union {
    PensionInput _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PensionInputDefaultTypeInternal _PensionInput_default_instance_;

inline constexpr NormalInput::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        fml_trnsctn_amt_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NormalInput::NormalInput(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(NormalInput_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NormalInputDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NormalInputDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NormalInputDefaultTypeInternal() {}
  union {
    NormalInput _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NormalInputDefaultTypeInternal _NormalInput_default_instance_;

inline constexpr CorpusInput::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        fml_cash_bal_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CorpusInput::CorpusInput(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CorpusInput_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CorpusInputDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CorpusInputDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CorpusInputDefaultTypeInternal() {}
  union {
    CorpusInput _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CorpusInputDefaultTypeInternal _CorpusInput_default_instance_;

inline constexpr CalculatorResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        fml_gms_amnt_allctd_{0},
        fml_cash_bal_{0},
        fml_idd_lst_prc_{0},
        fml_ord_amt_blckd_{0},
        fml_ord_net_vl_{0},
        fml_csb_nt_blncs_{0},
        fml_fml_ord_amt_blckdcov_status_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CalculatorResponse::CalculatorResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CalculatorResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CalculatorResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalculatorResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalculatorResponseDefaultTypeInternal() {}
  union {
    CalculatorResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalculatorResponseDefaultTypeInternal _CalculatorResponse_default_instance_;

inline constexpr CalculatorRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        fml_mf_growth_flg_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        fml_mod_plcd_flg_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        fml_usr_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        fml_mf_fre_mnth_{0},
        fml_interval_{0},
        fml_sssn_id_{::int64_t{0}},
        fml_from_period_{0},
        fml_otrnsctn_qty_{0},
        fml_cover_qty_{0},
        fml_idd_bst_bid_qty_{0},
        fml_o_stt_dys_{0},
        specific_input_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR CalculatorRequest::CalculatorRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CalculatorRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CalculatorRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalculatorRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalculatorRequestDefaultTypeInternal() {}
  union {
    CalculatorRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalculatorRequestDefaultTypeInternal _CalculatorRequest_default_instance_;
}  // namespace nps
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_nps_5fcal_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_nps_5fcal_2eproto = nullptr;
const ::uint32_t
    TableStruct_nps_5fcal_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::nps::NormalInput, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::nps::NormalInput, _impl_.fml_trnsctn_amt_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::nps::CorpusInput, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::nps::CorpusInput, _impl_.fml_cash_bal_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::nps::PensionInput, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::nps::PensionInput, _impl_.fml_gms_amnt_allctd_),
        0,
        0x085, // bitmap
        PROTOBUF_FIELD_OFFSET(::nps::CalculatorRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::nps::CalculatorRequest, _impl_._oneof_case_[0]),
        19, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::nps::CalculatorRequest, _impl_.fml_mf_fre_mnth_),
        PROTOBUF_FIELD_OFFSET(::nps::CalculatorRequest, _impl_.fml_interval_),
        PROTOBUF_FIELD_OFFSET(::nps::CalculatorRequest, _impl_.fml_from_period_),
        PROTOBUF_FIELD_OFFSET(::nps::CalculatorRequest, _impl_.fml_sssn_id_),
        PROTOBUF_FIELD_OFFSET(::nps::CalculatorRequest, _impl_.fml_otrnsctn_qty_),
        PROTOBUF_FIELD_OFFSET(::nps::CalculatorRequest, _impl_.fml_cover_qty_),
        PROTOBUF_FIELD_OFFSET(::nps::CalculatorRequest, _impl_.fml_idd_bst_bid_qty_),
        PROTOBUF_FIELD_OFFSET(::nps::CalculatorRequest, _impl_.fml_o_stt_dys_),
        PROTOBUF_FIELD_OFFSET(::nps::CalculatorRequest, _impl_.fml_mf_growth_flg_),
        PROTOBUF_FIELD_OFFSET(::nps::CalculatorRequest, _impl_.fml_mod_plcd_flg_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::nps::CalculatorRequest, _impl_.fml_usr_id_),
        PROTOBUF_FIELD_OFFSET(::nps::CalculatorRequest, _impl_.specific_input_),
        3,
        4,
        6,
        5,
        7,
        8,
        9,
        10,
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::nps::CalculatorResponse, _impl_._has_bits_),
        10, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::nps::CalculatorResponse, _impl_.fml_fml_ord_amt_blckdcov_status_),
        PROTOBUF_FIELD_OFFSET(::nps::CalculatorResponse, _impl_.fml_gms_amnt_allctd_),
        PROTOBUF_FIELD_OFFSET(::nps::CalculatorResponse, _impl_.fml_cash_bal_),
        PROTOBUF_FIELD_OFFSET(::nps::CalculatorResponse, _impl_.fml_idd_lst_prc_),
        PROTOBUF_FIELD_OFFSET(::nps::CalculatorResponse, _impl_.fml_ord_amt_blckd_),
        PROTOBUF_FIELD_OFFSET(::nps::CalculatorResponse, _impl_.fml_ord_net_vl_),
        PROTOBUF_FIELD_OFFSET(::nps::CalculatorResponse, _impl_.fml_csb_nt_blncs_),
        6,
        0,
        1,
        2,
        3,
        4,
        5,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::nps::NormalInput)},
        {5, sizeof(::nps::CorpusInput)},
        {10, sizeof(::nps::PensionInput)},
        {15, sizeof(::nps::CalculatorRequest)},
        {48, sizeof(::nps::CalculatorResponse)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::nps::_NormalInput_default_instance_._instance,
    &::nps::_CorpusInput_default_instance_._instance,
    &::nps::_PensionInput_default_instance_._instance,
    &::nps::_CalculatorRequest_default_instance_._instance,
    &::nps::_CalculatorResponse_default_instance_._instance,
};
const char descriptor_table_protodef_nps_5fcal_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\rnps_cal.proto\022\003nps\"&\n\013NormalInput\022\027\n\017F"
    "ML_TRNSCTN_AMT\030\001 \001(\001\"#\n\013CorpusInput\022\024\n\014F"
    "ML_CASH_BAL\030\001 \001(\001\"+\n\014PensionInput\022\033\n\023FML"
    "_GMS_AMNT_ALLCTD\030\001 \001(\001\"\236\003\n\021CalculatorReq"
    "uest\022\027\n\017FML_MF_FRE_MNTH\030\001 \001(\005\022\024\n\014FML_INT"
    "ERVAL\030\002 \001(\005\022\027\n\017FML_FROM_PERIOD\030\003 \001(\005\022\023\n\013"
    "FML_SSSN_ID\030\004 \001(\003\022\030\n\020FML_OTRNSCTN_QTY\030\005 "
    "\001(\005\022\025\n\rFML_COVER_QTY\030\006 \001(\005\022\033\n\023FML_IDD_BS"
    "T_BID_QTY\030\007 \001(\005\022\025\n\rFML_O_STT_DYS\030\010 \001(\005\022\031"
    "\n\021FML_MF_GROWTH_FLG\030\t \001(\t\022\030\n\020FML_MOD_PLC"
    "D_FLG\030\n \001(\t\022\"\n\006normal\030\013 \001(\0132\020.nps.Normal"
    "InputH\000\022\"\n\006corpus\030\014 \001(\0132\020.nps.CorpusInpu"
    "tH\000\022$\n\007pension\030\r \001(\0132\021.nps.PensionInputH"
    "\000\022\022\n\nFML_USR_ID\030\016 \001(\tB\020\n\016specific_input\""
    "\326\001\n\022CalculatorResponse\022\'\n\037FML_FML_ORD_AM"
    "T_BLCKDCOV_STATUS\030\001 \001(\005\022\033\n\023FML_GMS_AMNT_"
    "ALLCTD\030\002 \001(\001\022\024\n\014FML_CASH_BAL\030\003 \001(\001\022\027\n\017FM"
    "L_IDD_LST_PRC\030\004 \001(\001\022\031\n\021FML_ORD_AMT_BLCKD"
    "\030\005 \001(\001\022\026\n\016FML_ORD_NET_VL\030\006 \001(\001\022\030\n\020FML_CS"
    "B_NT_BLNCS\030\007 \001(\0012X\n\024NPSCalculatorService"
    "\022@\n\rNpsCalculater\022\026.nps.CalculatorReques"
    "t\032\027.nps.CalculatorResponseB\004Z\002./b\006proto3"
};
static ::absl::once_flag descriptor_table_nps_5fcal_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_nps_5fcal_2eproto = {
    false,
    false,
    880,
    descriptor_table_protodef_nps_5fcal_2eproto,
    "nps_cal.proto",
    &descriptor_table_nps_5fcal_2eproto_once,
    nullptr,
    0,
    5,
    schemas,
    file_default_instances,
    TableStruct_nps_5fcal_2eproto::offsets,
    file_level_enum_descriptors_nps_5fcal_2eproto,
    file_level_service_descriptors_nps_5fcal_2eproto,
};
namespace nps {
// ===================================================================

class NormalInput::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<NormalInput>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NormalInput, _impl_._has_bits_);
};

NormalInput::NormalInput(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NormalInput_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:nps.NormalInput)
}
NormalInput::NormalInput(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const NormalInput& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NormalInput_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE NormalInput::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void NormalInput::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.fml_trnsctn_amt_ = {};
}
NormalInput::~NormalInput() {
  // @@protoc_insertion_point(destructor:nps.NormalInput)
  SharedDtor(*this);
}
inline void NormalInput::SharedDtor(MessageLite& self) {
  NormalInput& this_ = static_cast<NormalInput&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL NormalInput::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) NormalInput(arena);
}
constexpr auto NormalInput::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(NormalInput),
                                            alignof(NormalInput));
}
constexpr auto NormalInput::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_NormalInput_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &NormalInput::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<NormalInput>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &NormalInput::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<NormalInput>(), &NormalInput::ByteSizeLong,
              &NormalInput::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(NormalInput, _impl_._cached_size_),
          false,
      },
      &NormalInput::kDescriptorMethods,
      &descriptor_table_nps_5fcal_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull NormalInput_class_data_ =
        NormalInput::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
NormalInput::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&NormalInput_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(NormalInput_class_data_.tc_table);
  return NormalInput_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
NormalInput::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NormalInput, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    NormalInput_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::nps::NormalInput>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double FML_TRNSCTN_AMT = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(NormalInput, _impl_.fml_trnsctn_amt_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double FML_TRNSCTN_AMT = 1;
    {PROTOBUF_FIELD_OFFSET(NormalInput, _impl_.fml_trnsctn_amt_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void NormalInput::Clear() {
// @@protoc_insertion_point(message_clear_start:nps.NormalInput)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.fml_trnsctn_amt_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL NormalInput::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const NormalInput& this_ = static_cast<const NormalInput&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL NormalInput::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const NormalInput& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:nps.NormalInput)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double FML_TRNSCTN_AMT = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_fml_trnsctn_amt()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          1, this_._internal_fml_trnsctn_amt(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nps.NormalInput)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t NormalInput::ByteSizeLong(const MessageLite& base) {
  const NormalInput& this_ = static_cast<const NormalInput&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t NormalInput::ByteSizeLong() const {
  const NormalInput& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:nps.NormalInput)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // double FML_TRNSCTN_AMT = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_fml_trnsctn_amt()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void NormalInput::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NormalInput*>(&to_msg);
  auto& from = static_cast<const NormalInput&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:nps.NormalInput)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint64_t>(from._internal_fml_trnsctn_amt()) != 0) {
      _this->_impl_.fml_trnsctn_amt_ = from._impl_.fml_trnsctn_amt_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NormalInput::CopyFrom(const NormalInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nps.NormalInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NormalInput::InternalSwap(NormalInput* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.fml_trnsctn_amt_, other->_impl_.fml_trnsctn_amt_);
}

::google::protobuf::Metadata NormalInput::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CorpusInput::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CorpusInput>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CorpusInput, _impl_._has_bits_);
};

CorpusInput::CorpusInput(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CorpusInput_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:nps.CorpusInput)
}
CorpusInput::CorpusInput(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CorpusInput& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CorpusInput_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CorpusInput::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CorpusInput::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.fml_cash_bal_ = {};
}
CorpusInput::~CorpusInput() {
  // @@protoc_insertion_point(destructor:nps.CorpusInput)
  SharedDtor(*this);
}
inline void CorpusInput::SharedDtor(MessageLite& self) {
  CorpusInput& this_ = static_cast<CorpusInput&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CorpusInput::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CorpusInput(arena);
}
constexpr auto CorpusInput::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CorpusInput),
                                            alignof(CorpusInput));
}
constexpr auto CorpusInput::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CorpusInput_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CorpusInput::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CorpusInput>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CorpusInput::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CorpusInput>(), &CorpusInput::ByteSizeLong,
              &CorpusInput::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CorpusInput, _impl_._cached_size_),
          false,
      },
      &CorpusInput::kDescriptorMethods,
      &descriptor_table_nps_5fcal_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CorpusInput_class_data_ =
        CorpusInput::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CorpusInput::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CorpusInput_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CorpusInput_class_data_.tc_table);
  return CorpusInput_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
CorpusInput::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CorpusInput, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CorpusInput_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::nps::CorpusInput>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double FML_CASH_BAL = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(CorpusInput, _impl_.fml_cash_bal_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double FML_CASH_BAL = 1;
    {PROTOBUF_FIELD_OFFSET(CorpusInput, _impl_.fml_cash_bal_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CorpusInput::Clear() {
// @@protoc_insertion_point(message_clear_start:nps.CorpusInput)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.fml_cash_bal_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CorpusInput::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CorpusInput& this_ = static_cast<const CorpusInput&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CorpusInput::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CorpusInput& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:nps.CorpusInput)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double FML_CASH_BAL = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_fml_cash_bal()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          1, this_._internal_fml_cash_bal(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nps.CorpusInput)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CorpusInput::ByteSizeLong(const MessageLite& base) {
  const CorpusInput& this_ = static_cast<const CorpusInput&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CorpusInput::ByteSizeLong() const {
  const CorpusInput& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:nps.CorpusInput)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // double FML_CASH_BAL = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_fml_cash_bal()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CorpusInput::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CorpusInput*>(&to_msg);
  auto& from = static_cast<const CorpusInput&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:nps.CorpusInput)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint64_t>(from._internal_fml_cash_bal()) != 0) {
      _this->_impl_.fml_cash_bal_ = from._impl_.fml_cash_bal_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CorpusInput::CopyFrom(const CorpusInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nps.CorpusInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CorpusInput::InternalSwap(CorpusInput* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.fml_cash_bal_, other->_impl_.fml_cash_bal_);
}

::google::protobuf::Metadata CorpusInput::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PensionInput::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<PensionInput>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PensionInput, _impl_._has_bits_);
};

PensionInput::PensionInput(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PensionInput_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:nps.PensionInput)
}
PensionInput::PensionInput(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PensionInput& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PensionInput_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE PensionInput::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void PensionInput::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.fml_gms_amnt_allctd_ = {};
}
PensionInput::~PensionInput() {
  // @@protoc_insertion_point(destructor:nps.PensionInput)
  SharedDtor(*this);
}
inline void PensionInput::SharedDtor(MessageLite& self) {
  PensionInput& this_ = static_cast<PensionInput&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PensionInput::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PensionInput(arena);
}
constexpr auto PensionInput::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PensionInput),
                                            alignof(PensionInput));
}
constexpr auto PensionInput::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PensionInput_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PensionInput::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PensionInput>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PensionInput::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PensionInput>(), &PensionInput::ByteSizeLong,
              &PensionInput::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PensionInput, _impl_._cached_size_),
          false,
      },
      &PensionInput::kDescriptorMethods,
      &descriptor_table_nps_5fcal_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PensionInput_class_data_ =
        PensionInput::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PensionInput::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PensionInput_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PensionInput_class_data_.tc_table);
  return PensionInput_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
PensionInput::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PensionInput, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    PensionInput_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::nps::PensionInput>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double FML_GMS_AMNT_ALLCTD = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(PensionInput, _impl_.fml_gms_amnt_allctd_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double FML_GMS_AMNT_ALLCTD = 1;
    {PROTOBUF_FIELD_OFFSET(PensionInput, _impl_.fml_gms_amnt_allctd_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void PensionInput::Clear() {
// @@protoc_insertion_point(message_clear_start:nps.PensionInput)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.fml_gms_amnt_allctd_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PensionInput::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PensionInput& this_ = static_cast<const PensionInput&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PensionInput::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PensionInput& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:nps.PensionInput)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double FML_GMS_AMNT_ALLCTD = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_fml_gms_amnt_allctd()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          1, this_._internal_fml_gms_amnt_allctd(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nps.PensionInput)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PensionInput::ByteSizeLong(const MessageLite& base) {
  const PensionInput& this_ = static_cast<const PensionInput&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PensionInput::ByteSizeLong() const {
  const PensionInput& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:nps.PensionInput)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // double FML_GMS_AMNT_ALLCTD = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_fml_gms_amnt_allctd()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PensionInput::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PensionInput*>(&to_msg);
  auto& from = static_cast<const PensionInput&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:nps.PensionInput)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint64_t>(from._internal_fml_gms_amnt_allctd()) != 0) {
      _this->_impl_.fml_gms_amnt_allctd_ = from._impl_.fml_gms_amnt_allctd_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PensionInput::CopyFrom(const PensionInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nps.PensionInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PensionInput::InternalSwap(PensionInput* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.fml_gms_amnt_allctd_, other->_impl_.fml_gms_amnt_allctd_);
}

::google::protobuf::Metadata PensionInput::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CalculatorRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CalculatorRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CalculatorRequest, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::nps::CalculatorRequest, _impl_._oneof_case_);
};

void CalculatorRequest::set_allocated_normal(::nps::NormalInput* PROTOBUF_NULLABLE normal) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_specific_input();
  if (normal) {
    ::google::protobuf::Arena* submessage_arena = normal->GetArena();
    if (message_arena != submessage_arena) {
      normal = ::google::protobuf::internal::GetOwnedMessage(message_arena, normal, submessage_arena);
    }
    set_has_normal();
    _impl_.specific_input_.normal_ = normal;
  }
  // @@protoc_insertion_point(field_set_allocated:nps.CalculatorRequest.normal)
}
void CalculatorRequest::set_allocated_corpus(::nps::CorpusInput* PROTOBUF_NULLABLE corpus) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_specific_input();
  if (corpus) {
    ::google::protobuf::Arena* submessage_arena = corpus->GetArena();
    if (message_arena != submessage_arena) {
      corpus = ::google::protobuf::internal::GetOwnedMessage(message_arena, corpus, submessage_arena);
    }
    set_has_corpus();
    _impl_.specific_input_.corpus_ = corpus;
  }
  // @@protoc_insertion_point(field_set_allocated:nps.CalculatorRequest.corpus)
}
void CalculatorRequest::set_allocated_pension(::nps::PensionInput* PROTOBUF_NULLABLE pension) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_specific_input();
  if (pension) {
    ::google::protobuf::Arena* submessage_arena = pension->GetArena();
    if (message_arena != submessage_arena) {
      pension = ::google::protobuf::internal::GetOwnedMessage(message_arena, pension, submessage_arena);
    }
    set_has_pension();
    _impl_.specific_input_.pension_ = pension;
  }
  // @@protoc_insertion_point(field_set_allocated:nps.CalculatorRequest.pension)
}
CalculatorRequest::CalculatorRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CalculatorRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:nps.CalculatorRequest)
}
PROTOBUF_NDEBUG_INLINE CalculatorRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::nps::CalculatorRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        fml_mf_growth_flg_(arena, from.fml_mf_growth_flg_),
        fml_mod_plcd_flg_(arena, from.fml_mod_plcd_flg_),
        fml_usr_id_(arena, from.fml_usr_id_),
        specific_input_{},
        _oneof_case_{from._oneof_case_[0]} {}

CalculatorRequest::CalculatorRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CalculatorRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CalculatorRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CalculatorRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, fml_mf_fre_mnth_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, fml_mf_fre_mnth_),
           offsetof(Impl_, fml_o_stt_dys_) -
               offsetof(Impl_, fml_mf_fre_mnth_) +
               sizeof(Impl_::fml_o_stt_dys_));
  switch (specific_input_case()) {
    case SPECIFIC_INPUT_NOT_SET:
      break;
      case kNormal:
        _impl_.specific_input_.normal_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.specific_input_.normal_);
        break;
      case kCorpus:
        _impl_.specific_input_.corpus_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.specific_input_.corpus_);
        break;
      case kPension:
        _impl_.specific_input_.pension_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.specific_input_.pension_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:nps.CalculatorRequest)
}
PROTOBUF_NDEBUG_INLINE CalculatorRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        fml_mf_growth_flg_(arena),
        fml_mod_plcd_flg_(arena),
        fml_usr_id_(arena),
        specific_input_{},
        _oneof_case_{} {}

inline void CalculatorRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, fml_mf_fre_mnth_),
           0,
           offsetof(Impl_, fml_o_stt_dys_) -
               offsetof(Impl_, fml_mf_fre_mnth_) +
               sizeof(Impl_::fml_o_stt_dys_));
}
CalculatorRequest::~CalculatorRequest() {
  // @@protoc_insertion_point(destructor:nps.CalculatorRequest)
  SharedDtor(*this);
}
inline void CalculatorRequest::SharedDtor(MessageLite& self) {
  CalculatorRequest& this_ = static_cast<CalculatorRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.fml_mf_growth_flg_.Destroy();
  this_._impl_.fml_mod_plcd_flg_.Destroy();
  this_._impl_.fml_usr_id_.Destroy();
  if (this_.has_specific_input()) {
    this_.clear_specific_input();
  }
  this_._impl_.~Impl_();
}

void CalculatorRequest::clear_specific_input() {
// @@protoc_insertion_point(one_of_clear_start:nps.CalculatorRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (specific_input_case()) {
    case kNormal: {
      if (GetArena() == nullptr) {
        delete _impl_.specific_input_.normal_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.specific_input_.normal_);
      }
      break;
    }
    case kCorpus: {
      if (GetArena() == nullptr) {
        delete _impl_.specific_input_.corpus_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.specific_input_.corpus_);
      }
      break;
    }
    case kPension: {
      if (GetArena() == nullptr) {
        delete _impl_.specific_input_.pension_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.specific_input_.pension_);
      }
      break;
    }
    case SPECIFIC_INPUT_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = SPECIFIC_INPUT_NOT_SET;
}


inline void* PROTOBUF_NONNULL CalculatorRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CalculatorRequest(arena);
}
constexpr auto CalculatorRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CalculatorRequest),
                                            alignof(CalculatorRequest));
}
constexpr auto CalculatorRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CalculatorRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CalculatorRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CalculatorRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CalculatorRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CalculatorRequest>(), &CalculatorRequest::ByteSizeLong,
              &CalculatorRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CalculatorRequest, _impl_._cached_size_),
          false,
      },
      &CalculatorRequest::kDescriptorMethods,
      &descriptor_table_nps_5fcal_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CalculatorRequest_class_data_ =
        CalculatorRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CalculatorRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CalculatorRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CalculatorRequest_class_data_.tc_table);
  return CalculatorRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 3, 81, 2>
CalculatorRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CalculatorRequest, _impl_._has_bits_),
    0, // no _extensions_
    14, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950912,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CalculatorRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::nps::CalculatorRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 FML_MF_FRE_MNTH = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CalculatorRequest, _impl_.fml_mf_fre_mnth_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(CalculatorRequest, _impl_.fml_mf_fre_mnth_)}},
    // int32 FML_INTERVAL = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CalculatorRequest, _impl_.fml_interval_), 4>(),
     {16, 4, 0, PROTOBUF_FIELD_OFFSET(CalculatorRequest, _impl_.fml_interval_)}},
    // int32 FML_FROM_PERIOD = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CalculatorRequest, _impl_.fml_from_period_), 6>(),
     {24, 6, 0, PROTOBUF_FIELD_OFFSET(CalculatorRequest, _impl_.fml_from_period_)}},
    // int64 FML_SSSN_ID = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CalculatorRequest, _impl_.fml_sssn_id_), 5>(),
     {32, 5, 0, PROTOBUF_FIELD_OFFSET(CalculatorRequest, _impl_.fml_sssn_id_)}},
    // int32 FML_OTRNSCTN_QTY = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CalculatorRequest, _impl_.fml_otrnsctn_qty_), 7>(),
     {40, 7, 0, PROTOBUF_FIELD_OFFSET(CalculatorRequest, _impl_.fml_otrnsctn_qty_)}},
    // int32 FML_COVER_QTY = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CalculatorRequest, _impl_.fml_cover_qty_), 8>(),
     {48, 8, 0, PROTOBUF_FIELD_OFFSET(CalculatorRequest, _impl_.fml_cover_qty_)}},
    // int32 FML_IDD_BST_BID_QTY = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CalculatorRequest, _impl_.fml_idd_bst_bid_qty_), 9>(),
     {56, 9, 0, PROTOBUF_FIELD_OFFSET(CalculatorRequest, _impl_.fml_idd_bst_bid_qty_)}},
    // int32 FML_O_STT_DYS = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CalculatorRequest, _impl_.fml_o_stt_dys_), 10>(),
     {64, 10, 0, PROTOBUF_FIELD_OFFSET(CalculatorRequest, _impl_.fml_o_stt_dys_)}},
    // string FML_MF_GROWTH_FLG = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 0, 0, PROTOBUF_FIELD_OFFSET(CalculatorRequest, _impl_.fml_mf_growth_flg_)}},
    // string FML_MOD_PLCD_FLG = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 1, 0, PROTOBUF_FIELD_OFFSET(CalculatorRequest, _impl_.fml_mod_plcd_flg_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // string FML_USR_ID = 14;
    {::_pbi::TcParser::FastUS1,
     {114, 2, 0, PROTOBUF_FIELD_OFFSET(CalculatorRequest, _impl_.fml_usr_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 FML_MF_FRE_MNTH = 1;
    {PROTOBUF_FIELD_OFFSET(CalculatorRequest, _impl_.fml_mf_fre_mnth_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 FML_INTERVAL = 2;
    {PROTOBUF_FIELD_OFFSET(CalculatorRequest, _impl_.fml_interval_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 FML_FROM_PERIOD = 3;
    {PROTOBUF_FIELD_OFFSET(CalculatorRequest, _impl_.fml_from_period_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int64 FML_SSSN_ID = 4;
    {PROTOBUF_FIELD_OFFSET(CalculatorRequest, _impl_.fml_sssn_id_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int32 FML_OTRNSCTN_QTY = 5;
    {PROTOBUF_FIELD_OFFSET(CalculatorRequest, _impl_.fml_otrnsctn_qty_), _Internal::kHasBitsOffset + 7, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 FML_COVER_QTY = 6;
    {PROTOBUF_FIELD_OFFSET(CalculatorRequest, _impl_.fml_cover_qty_), _Internal::kHasBitsOffset + 8, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 FML_IDD_BST_BID_QTY = 7;
    {PROTOBUF_FIELD_OFFSET(CalculatorRequest, _impl_.fml_idd_bst_bid_qty_), _Internal::kHasBitsOffset + 9, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 FML_O_STT_DYS = 8;
    {PROTOBUF_FIELD_OFFSET(CalculatorRequest, _impl_.fml_o_stt_dys_), _Internal::kHasBitsOffset + 10, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string FML_MF_GROWTH_FLG = 9;
    {PROTOBUF_FIELD_OFFSET(CalculatorRequest, _impl_.fml_mf_growth_flg_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string FML_MOD_PLCD_FLG = 10;
    {PROTOBUF_FIELD_OFFSET(CalculatorRequest, _impl_.fml_mod_plcd_flg_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .nps.NormalInput normal = 11;
    {PROTOBUF_FIELD_OFFSET(CalculatorRequest, _impl_.specific_input_.normal_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .nps.CorpusInput corpus = 12;
    {PROTOBUF_FIELD_OFFSET(CalculatorRequest, _impl_.specific_input_.corpus_), _Internal::kOneofCaseOffset + 0, 1, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .nps.PensionInput pension = 13;
    {PROTOBUF_FIELD_OFFSET(CalculatorRequest, _impl_.specific_input_.pension_), _Internal::kOneofCaseOffset + 0, 2, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // string FML_USR_ID = 14;
    {PROTOBUF_FIELD_OFFSET(CalculatorRequest, _impl_.fml_usr_id_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::nps::NormalInput>()},
      {::_pbi::TcParser::GetTable<::nps::CorpusInput>()},
      {::_pbi::TcParser::GetTable<::nps::PensionInput>()},
  }},
  {{
    "\25\0\0\0\0\0\0\0\0\21\20\0\0\0\12\0"
    "nps.CalculatorRequest"
    "FML_MF_GROWTH_FLG"
    "FML_MOD_PLCD_FLG"
    "FML_USR_ID"
  }},
};
PROTOBUF_NOINLINE void CalculatorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:nps.CalculatorRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.fml_mf_growth_flg_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.fml_mod_plcd_flg_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.fml_usr_id_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x000000f8U) != 0) {
    ::memset(&_impl_.fml_mf_fre_mnth_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.fml_otrnsctn_qty_) -
        reinterpret_cast<char*>(&_impl_.fml_mf_fre_mnth_)) + sizeof(_impl_.fml_otrnsctn_qty_));
  }
  if ((cached_has_bits & 0x00000700U) != 0) {
    ::memset(&_impl_.fml_cover_qty_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.fml_o_stt_dys_) -
        reinterpret_cast<char*>(&_impl_.fml_cover_qty_)) + sizeof(_impl_.fml_o_stt_dys_));
  }
  clear_specific_input();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CalculatorRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CalculatorRequest& this_ = static_cast<const CalculatorRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CalculatorRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CalculatorRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:nps.CalculatorRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 FML_MF_FRE_MNTH = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_fml_mf_fre_mnth() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_fml_mf_fre_mnth(), target);
    }
  }

  // int32 FML_INTERVAL = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_fml_interval() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_fml_interval(), target);
    }
  }

  // int32 FML_FROM_PERIOD = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000040U) != 0) {
    if (this_._internal_fml_from_period() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_fml_from_period(), target);
    }
  }

  // int64 FML_SSSN_ID = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (this_._internal_fml_sssn_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<4>(
              stream, this_._internal_fml_sssn_id(), target);
    }
  }

  // int32 FML_OTRNSCTN_QTY = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000080U) != 0) {
    if (this_._internal_fml_otrnsctn_qty() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
              stream, this_._internal_fml_otrnsctn_qty(), target);
    }
  }

  // int32 FML_COVER_QTY = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000100U) != 0) {
    if (this_._internal_fml_cover_qty() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<6>(
              stream, this_._internal_fml_cover_qty(), target);
    }
  }

  // int32 FML_IDD_BST_BID_QTY = 7;
  if ((this_._impl_._has_bits_[0] & 0x00000200U) != 0) {
    if (this_._internal_fml_idd_bst_bid_qty() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<7>(
              stream, this_._internal_fml_idd_bst_bid_qty(), target);
    }
  }

  // int32 FML_O_STT_DYS = 8;
  if ((this_._impl_._has_bits_[0] & 0x00000400U) != 0) {
    if (this_._internal_fml_o_stt_dys() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<8>(
              stream, this_._internal_fml_o_stt_dys(), target);
    }
  }

  // string FML_MF_GROWTH_FLG = 9;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_fml_mf_growth_flg().empty()) {
      const ::std::string& _s = this_._internal_fml_mf_growth_flg();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "nps.CalculatorRequest.FML_MF_GROWTH_FLG");
      target = stream->WriteStringMaybeAliased(9, _s, target);
    }
  }

  // string FML_MOD_PLCD_FLG = 10;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_fml_mod_plcd_flg().empty()) {
      const ::std::string& _s = this_._internal_fml_mod_plcd_flg();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "nps.CalculatorRequest.FML_MOD_PLCD_FLG");
      target = stream->WriteStringMaybeAliased(10, _s, target);
    }
  }

  switch (this_.specific_input_case()) {
    case kNormal: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          11, *this_._impl_.specific_input_.normal_, this_._impl_.specific_input_.normal_->GetCachedSize(), target,
          stream);
      break;
    }
    case kCorpus: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          12, *this_._impl_.specific_input_.corpus_, this_._impl_.specific_input_.corpus_->GetCachedSize(), target,
          stream);
      break;
    }
    case kPension: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          13, *this_._impl_.specific_input_.pension_, this_._impl_.specific_input_.pension_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  // string FML_USR_ID = 14;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_fml_usr_id().empty()) {
      const ::std::string& _s = this_._internal_fml_usr_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "nps.CalculatorRequest.FML_USR_ID");
      target = stream->WriteStringMaybeAliased(14, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nps.CalculatorRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CalculatorRequest::ByteSizeLong(const MessageLite& base) {
  const CalculatorRequest& this_ = static_cast<const CalculatorRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CalculatorRequest::ByteSizeLong() const {
  const CalculatorRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:nps.CalculatorRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    // string FML_MF_GROWTH_FLG = 9;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_fml_mf_growth_flg().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_fml_mf_growth_flg());
      }
    }
    // string FML_MOD_PLCD_FLG = 10;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_fml_mod_plcd_flg().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_fml_mod_plcd_flg());
      }
    }
    // string FML_USR_ID = 14;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_fml_usr_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_fml_usr_id());
      }
    }
    // int32 FML_MF_FRE_MNTH = 1;
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_fml_mf_fre_mnth() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_fml_mf_fre_mnth());
      }
    }
    // int32 FML_INTERVAL = 2;
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_fml_interval() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_fml_interval());
      }
    }
    // int64 FML_SSSN_ID = 4;
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_fml_sssn_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_fml_sssn_id());
      }
    }
    // int32 FML_FROM_PERIOD = 3;
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (this_._internal_fml_from_period() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_fml_from_period());
      }
    }
    // int32 FML_OTRNSCTN_QTY = 5;
    if ((cached_has_bits & 0x00000080U) != 0) {
      if (this_._internal_fml_otrnsctn_qty() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_fml_otrnsctn_qty());
      }
    }
  }
  if ((cached_has_bits & 0x00000700U) != 0) {
    // int32 FML_COVER_QTY = 6;
    if ((cached_has_bits & 0x00000100U) != 0) {
      if (this_._internal_fml_cover_qty() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_fml_cover_qty());
      }
    }
    // int32 FML_IDD_BST_BID_QTY = 7;
    if ((cached_has_bits & 0x00000200U) != 0) {
      if (this_._internal_fml_idd_bst_bid_qty() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_fml_idd_bst_bid_qty());
      }
    }
    // int32 FML_O_STT_DYS = 8;
    if ((cached_has_bits & 0x00000400U) != 0) {
      if (this_._internal_fml_o_stt_dys() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_fml_o_stt_dys());
      }
    }
  }
  switch (this_.specific_input_case()) {
    // .nps.NormalInput normal = 11;
    case kNormal: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.specific_input_.normal_);
      break;
    }
    // .nps.CorpusInput corpus = 12;
    case kCorpus: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.specific_input_.corpus_);
      break;
    }
    // .nps.PensionInput pension = 13;
    case kPension: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.specific_input_.pension_);
      break;
    }
    case SPECIFIC_INPUT_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CalculatorRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CalculatorRequest*>(&to_msg);
  auto& from = static_cast<const CalculatorRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:nps.CalculatorRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_fml_mf_growth_flg().empty()) {
        _this->_internal_set_fml_mf_growth_flg(from._internal_fml_mf_growth_flg());
      } else {
        if (_this->_impl_.fml_mf_growth_flg_.IsDefault()) {
          _this->_internal_set_fml_mf_growth_flg("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_fml_mod_plcd_flg().empty()) {
        _this->_internal_set_fml_mod_plcd_flg(from._internal_fml_mod_plcd_flg());
      } else {
        if (_this->_impl_.fml_mod_plcd_flg_.IsDefault()) {
          _this->_internal_set_fml_mod_plcd_flg("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_fml_usr_id().empty()) {
        _this->_internal_set_fml_usr_id(from._internal_fml_usr_id());
      } else {
        if (_this->_impl_.fml_usr_id_.IsDefault()) {
          _this->_internal_set_fml_usr_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_fml_mf_fre_mnth() != 0) {
        _this->_impl_.fml_mf_fre_mnth_ = from._impl_.fml_mf_fre_mnth_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_fml_interval() != 0) {
        _this->_impl_.fml_interval_ = from._impl_.fml_interval_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_fml_sssn_id() != 0) {
        _this->_impl_.fml_sssn_id_ = from._impl_.fml_sssn_id_;
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (from._internal_fml_from_period() != 0) {
        _this->_impl_.fml_from_period_ = from._impl_.fml_from_period_;
      }
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      if (from._internal_fml_otrnsctn_qty() != 0) {
        _this->_impl_.fml_otrnsctn_qty_ = from._impl_.fml_otrnsctn_qty_;
      }
    }
  }
  if ((cached_has_bits & 0x00000700U) != 0) {
    if ((cached_has_bits & 0x00000100U) != 0) {
      if (from._internal_fml_cover_qty() != 0) {
        _this->_impl_.fml_cover_qty_ = from._impl_.fml_cover_qty_;
      }
    }
    if ((cached_has_bits & 0x00000200U) != 0) {
      if (from._internal_fml_idd_bst_bid_qty() != 0) {
        _this->_impl_.fml_idd_bst_bid_qty_ = from._impl_.fml_idd_bst_bid_qty_;
      }
    }
    if ((cached_has_bits & 0x00000400U) != 0) {
      if (from._internal_fml_o_stt_dys() != 0) {
        _this->_impl_.fml_o_stt_dys_ = from._impl_.fml_o_stt_dys_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_specific_input();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kNormal: {
        if (oneof_needs_init) {
          _this->_impl_.specific_input_.normal_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.specific_input_.normal_);
        } else {
          _this->_impl_.specific_input_.normal_->MergeFrom(*from._impl_.specific_input_.normal_);
        }
        break;
      }
      case kCorpus: {
        if (oneof_needs_init) {
          _this->_impl_.specific_input_.corpus_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.specific_input_.corpus_);
        } else {
          _this->_impl_.specific_input_.corpus_->MergeFrom(*from._impl_.specific_input_.corpus_);
        }
        break;
      }
      case kPension: {
        if (oneof_needs_init) {
          _this->_impl_.specific_input_.pension_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.specific_input_.pension_);
        } else {
          _this->_impl_.specific_input_.pension_->MergeFrom(*from._impl_.specific_input_.pension_);
        }
        break;
      }
      case SPECIFIC_INPUT_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CalculatorRequest::CopyFrom(const CalculatorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nps.CalculatorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CalculatorRequest::InternalSwap(CalculatorRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.fml_mf_growth_flg_, &other->_impl_.fml_mf_growth_flg_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.fml_mod_plcd_flg_, &other->_impl_.fml_mod_plcd_flg_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.fml_usr_id_, &other->_impl_.fml_usr_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CalculatorRequest, _impl_.fml_o_stt_dys_)
      + sizeof(CalculatorRequest::_impl_.fml_o_stt_dys_)
      - PROTOBUF_FIELD_OFFSET(CalculatorRequest, _impl_.fml_mf_fre_mnth_)>(
          reinterpret_cast<char*>(&_impl_.fml_mf_fre_mnth_),
          reinterpret_cast<char*>(&other->_impl_.fml_mf_fre_mnth_));
  swap(_impl_.specific_input_, other->_impl_.specific_input_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata CalculatorRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CalculatorResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CalculatorResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CalculatorResponse, _impl_._has_bits_);
};

CalculatorResponse::CalculatorResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CalculatorResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:nps.CalculatorResponse)
}
CalculatorResponse::CalculatorResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CalculatorResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CalculatorResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CalculatorResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CalculatorResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, fml_gms_amnt_allctd_),
           0,
           offsetof(Impl_, fml_fml_ord_amt_blckdcov_status_) -
               offsetof(Impl_, fml_gms_amnt_allctd_) +
               sizeof(Impl_::fml_fml_ord_amt_blckdcov_status_));
}
CalculatorResponse::~CalculatorResponse() {
  // @@protoc_insertion_point(destructor:nps.CalculatorResponse)
  SharedDtor(*this);
}
inline void CalculatorResponse::SharedDtor(MessageLite& self) {
  CalculatorResponse& this_ = static_cast<CalculatorResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CalculatorResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CalculatorResponse(arena);
}
constexpr auto CalculatorResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CalculatorResponse),
                                            alignof(CalculatorResponse));
}
constexpr auto CalculatorResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CalculatorResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CalculatorResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CalculatorResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CalculatorResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CalculatorResponse>(), &CalculatorResponse::ByteSizeLong,
              &CalculatorResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CalculatorResponse, _impl_._cached_size_),
          false,
      },
      &CalculatorResponse::kDescriptorMethods,
      &descriptor_table_nps_5fcal_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CalculatorResponse_class_data_ =
        CalculatorResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CalculatorResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CalculatorResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CalculatorResponse_class_data_.tc_table);
  return CalculatorResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 0, 2>
CalculatorResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CalculatorResponse, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CalculatorResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::nps::CalculatorResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 FML_FML_ORD_AMT_BLCKDCOV_STATUS = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CalculatorResponse, _impl_.fml_fml_ord_amt_blckdcov_status_), 6>(),
     {8, 6, 0, PROTOBUF_FIELD_OFFSET(CalculatorResponse, _impl_.fml_fml_ord_amt_blckdcov_status_)}},
    // double FML_GMS_AMNT_ALLCTD = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 0, 0, PROTOBUF_FIELD_OFFSET(CalculatorResponse, _impl_.fml_gms_amnt_allctd_)}},
    // double FML_CASH_BAL = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 1, 0, PROTOBUF_FIELD_OFFSET(CalculatorResponse, _impl_.fml_cash_bal_)}},
    // double FML_IDD_LST_PRC = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 2, 0, PROTOBUF_FIELD_OFFSET(CalculatorResponse, _impl_.fml_idd_lst_prc_)}},
    // double FML_ORD_AMT_BLCKD = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 3, 0, PROTOBUF_FIELD_OFFSET(CalculatorResponse, _impl_.fml_ord_amt_blckd_)}},
    // double FML_ORD_NET_VL = 6;
    {::_pbi::TcParser::FastF64S1,
     {49, 4, 0, PROTOBUF_FIELD_OFFSET(CalculatorResponse, _impl_.fml_ord_net_vl_)}},
    // double FML_CSB_NT_BLNCS = 7;
    {::_pbi::TcParser::FastF64S1,
     {57, 5, 0, PROTOBUF_FIELD_OFFSET(CalculatorResponse, _impl_.fml_csb_nt_blncs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 FML_FML_ORD_AMT_BLCKDCOV_STATUS = 1;
    {PROTOBUF_FIELD_OFFSET(CalculatorResponse, _impl_.fml_fml_ord_amt_blckdcov_status_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // double FML_GMS_AMNT_ALLCTD = 2;
    {PROTOBUF_FIELD_OFFSET(CalculatorResponse, _impl_.fml_gms_amnt_allctd_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double FML_CASH_BAL = 3;
    {PROTOBUF_FIELD_OFFSET(CalculatorResponse, _impl_.fml_cash_bal_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double FML_IDD_LST_PRC = 4;
    {PROTOBUF_FIELD_OFFSET(CalculatorResponse, _impl_.fml_idd_lst_prc_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double FML_ORD_AMT_BLCKD = 5;
    {PROTOBUF_FIELD_OFFSET(CalculatorResponse, _impl_.fml_ord_amt_blckd_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double FML_ORD_NET_VL = 6;
    {PROTOBUF_FIELD_OFFSET(CalculatorResponse, _impl_.fml_ord_net_vl_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double FML_CSB_NT_BLNCS = 7;
    {PROTOBUF_FIELD_OFFSET(CalculatorResponse, _impl_.fml_csb_nt_blncs_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CalculatorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:nps.CalculatorResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    ::memset(&_impl_.fml_gms_amnt_allctd_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.fml_fml_ord_amt_blckdcov_status_) -
        reinterpret_cast<char*>(&_impl_.fml_gms_amnt_allctd_)) + sizeof(_impl_.fml_fml_ord_amt_blckdcov_status_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CalculatorResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CalculatorResponse& this_ = static_cast<const CalculatorResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CalculatorResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CalculatorResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:nps.CalculatorResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 FML_FML_ORD_AMT_BLCKDCOV_STATUS = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000040U) != 0) {
    if (this_._internal_fml_fml_ord_amt_blckdcov_status() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_fml_fml_ord_amt_blckdcov_status(), target);
    }
  }

  // double FML_GMS_AMNT_ALLCTD = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_fml_gms_amnt_allctd()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_fml_gms_amnt_allctd(), target);
    }
  }

  // double FML_CASH_BAL = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_fml_cash_bal()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_fml_cash_bal(), target);
    }
  }

  // double FML_IDD_LST_PRC = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_fml_idd_lst_prc()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          4, this_._internal_fml_idd_lst_prc(), target);
    }
  }

  // double FML_ORD_AMT_BLCKD = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_fml_ord_amt_blckd()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          5, this_._internal_fml_ord_amt_blckd(), target);
    }
  }

  // double FML_ORD_NET_VL = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_fml_ord_net_vl()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          6, this_._internal_fml_ord_net_vl(), target);
    }
  }

  // double FML_CSB_NT_BLNCS = 7;
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_fml_csb_nt_blncs()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          7, this_._internal_fml_csb_nt_blncs(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nps.CalculatorResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CalculatorResponse::ByteSizeLong(const MessageLite& base) {
  const CalculatorResponse& this_ = static_cast<const CalculatorResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CalculatorResponse::ByteSizeLong() const {
  const CalculatorResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:nps.CalculatorResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    // double FML_GMS_AMNT_ALLCTD = 2;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_fml_gms_amnt_allctd()) != 0) {
        total_size += 9;
      }
    }
    // double FML_CASH_BAL = 3;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_fml_cash_bal()) != 0) {
        total_size += 9;
      }
    }
    // double FML_IDD_LST_PRC = 4;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_fml_idd_lst_prc()) != 0) {
        total_size += 9;
      }
    }
    // double FML_ORD_AMT_BLCKD = 5;
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_fml_ord_amt_blckd()) != 0) {
        total_size += 9;
      }
    }
    // double FML_ORD_NET_VL = 6;
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_fml_ord_net_vl()) != 0) {
        total_size += 9;
      }
    }
    // double FML_CSB_NT_BLNCS = 7;
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_fml_csb_nt_blncs()) != 0) {
        total_size += 9;
      }
    }
    // int32 FML_FML_ORD_AMT_BLCKDCOV_STATUS = 1;
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (this_._internal_fml_fml_ord_amt_blckdcov_status() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_fml_fml_ord_amt_blckdcov_status());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CalculatorResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CalculatorResponse*>(&to_msg);
  auto& from = static_cast<const CalculatorResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:nps.CalculatorResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_fml_gms_amnt_allctd()) != 0) {
        _this->_impl_.fml_gms_amnt_allctd_ = from._impl_.fml_gms_amnt_allctd_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_fml_cash_bal()) != 0) {
        _this->_impl_.fml_cash_bal_ = from._impl_.fml_cash_bal_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_fml_idd_lst_prc()) != 0) {
        _this->_impl_.fml_idd_lst_prc_ = from._impl_.fml_idd_lst_prc_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_fml_ord_amt_blckd()) != 0) {
        _this->_impl_.fml_ord_amt_blckd_ = from._impl_.fml_ord_amt_blckd_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_fml_ord_net_vl()) != 0) {
        _this->_impl_.fml_ord_net_vl_ = from._impl_.fml_ord_net_vl_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_fml_csb_nt_blncs()) != 0) {
        _this->_impl_.fml_csb_nt_blncs_ = from._impl_.fml_csb_nt_blncs_;
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (from._internal_fml_fml_ord_amt_blckdcov_status() != 0) {
        _this->_impl_.fml_fml_ord_amt_blckdcov_status_ = from._impl_.fml_fml_ord_amt_blckdcov_status_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CalculatorResponse::CopyFrom(const CalculatorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nps.CalculatorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CalculatorResponse::InternalSwap(CalculatorResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CalculatorResponse, _impl_.fml_fml_ord_amt_blckdcov_status_)
      + sizeof(CalculatorResponse::_impl_.fml_fml_ord_amt_blckdcov_status_)
      - PROTOBUF_FIELD_OFFSET(CalculatorResponse, _impl_.fml_gms_amnt_allctd_)>(
          reinterpret_cast<char*>(&_impl_.fml_gms_amnt_allctd_),
          reinterpret_cast<char*>(&other->_impl_.fml_gms_amnt_allctd_));
}

::google::protobuf::Metadata CalculatorResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace nps
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_nps_5fcal_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
